name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"        # ← align with pyproject (>=3.12)

      - name: Install Poetry
        run: pipx install poetry==1.8.3

      # Use an isolated venv, not the system interpreter
      - name: Configure Poetry venv
        run: |
          poetry config virtualenvs.in-project true
          poetry config virtualenvs.create true

      # Cache the virtualenv keyed by lockfile
      - name: Cache .venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      # Keep lock in sync and install dev tools (black, mypy, pytest, ...)
      - name: Install deps (incl. dev)
        run: |
          poetry lock --no-update
          poetry install --with dev --no-interaction --no-ansi

      - name: Black
        run: poetry run black --check .

      - name: Mypy
        run: poetry run mypy src/chromasurr

      - name: Pytest
        run: poetry run pytest -q
